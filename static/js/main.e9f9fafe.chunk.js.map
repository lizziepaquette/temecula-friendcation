{"version":3,"sources":["photos/temecula-main-view.svg","photos/temecula-main-view-bw.svg","Playlist.js","App.js","reportWebVitals.js","index.js"],"names":["PageWrapper","styled","div","SpotifyIframe","iframe","Playlist","className","title","src","frameborder","allowtransparency","allow","CountdownHeader","h1","CountdownClockWrapper","props","bgImg","CountdownClock","days","hours","minutes","seconds","completed","funnyBwBackground","temeculaMainPhoto","MyCountdown","temeculaTripStart","date","renderer","App","Date","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,MAA0B,+CCA1B,MAA0B,kD,OCGnCA,EAAcC,IAAOC,IAAV,uEAIXC,EAAgBF,IAAOG,OAAV,+DAiBJC,EAZE,kBACf,eAACL,EAAD,CAAaM,UAAU,MAAvB,cACE,cAACH,EAAD,CACEI,MAAM,yBACNC,IAAI,iEACJC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,wB,QCXNC,EAAkBX,IAAOY,GAAV,wIASfC,EAAwBb,IAAOC,IAAV,yOAIC,SAAAa,GAAK,OAAIA,EAAMC,SAOrCC,EAAiB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAC9C,OADuE,EAAhBC,UAGnD,cAACR,EAAD,CAAuBE,MAAQO,EAA/B,SACE,cAACX,EAAD,0CAMJ,cAACE,EAAD,CAAuBE,MAAQQ,EAA/B,SACE,eAACZ,EAAD,WACGM,EADH,SACc,uBACXC,EAFH,UAEgB,uBACbC,EAHH,YAGoB,uBACjBC,EAJH,iBAUArB,EAAcC,IAAOC,IAAV,uEAKXuB,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,kBAAH,OAEjB,cAAC,EAAD,CAAapB,UAAU,MAAvB,SACG,cAAC,IAAD,CACIqB,KAAOD,EACPE,SAAWX,OAiBNY,MAbf,WACE,IAAMH,EAAoB,IAAII,KAAK,uBAEnC,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaJ,kBAAmBA,EAAmBK,KAAK,MACxD,cAAC,EAAD,CAAUA,KAAK,iBCzDNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9f9fafe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/temecula-main-view.2a4e20a2.svg\";","export default __webpack_public_path__ + \"static/media/temecula-main-view-bw.9647a94b.svg\";","import React from \"react\"\nimport styled from 'styled-components';\n\nconst PageWrapper = styled.div`\n  @media screen and (max-width: 768px) {}\n`;\n\nconst SpotifyIframe = styled.iframe`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Playlist = () => (\n  <PageWrapper className=\"App\">>\n    <SpotifyIframe\n      title=\"Collaborative Playlist\"\n      src=\"https://open.spotify.com/embed/playlist/1mPkhlYZZEatTrN5t1AmPD\"\n      frameborder=\"0\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\">\n    </SpotifyIframe>\n  </PageWrapper>\n)\n\nexport default Playlist;\n","import './App.css';\nimport styled from 'styled-components';\nimport Countdown from 'react-countdown';\nimport temeculaMainPhoto from './photos/temecula-main-view.svg';\nimport funnyBwBackground from './photos/temecula-main-view-bw.svg';\nimport Playlist from './Playlist'\nimport { Router } from \"@reach/router\"\n\nconst CountdownHeader = styled.h1`\n  font-size: 12vw;\n  margin: 0px;\n\n  @media screen and (max-width: 768px) {\n    line-height: 200%\n  }\n`;\n\nconst CountdownClockWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  color: white;\n  background-image: url(\"${ props => props.bgImg }\");\n  background-size: cover;\n  box-sizing: border-box;\n  background-position: 30% 50%;\n  background-repeat: no-repeat;\n`;\n\nconst CountdownClock = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return (\n      <CountdownClockWrapper bgImg={ funnyBwBackground } >\n        <CountdownHeader>I really hope it was fun.</CountdownHeader>\n      </CountdownClockWrapper>\n    );\n  }\n\n  return (\n    <CountdownClockWrapper bgImg={ temeculaMainPhoto } >\n      <CountdownHeader>\n        {days} Days <br/>\n        {hours} Hours <br/>\n        {minutes} Minutes <br />\n        {seconds} Seconds\n      </CountdownHeader>\n    </CountdownClockWrapper>\n  );\n}\n\nconst PageWrapper = styled.div`\n  @media screen and (max-width: 768px) {}\n`;\n\n\nconst MyCountdown = ({ temeculaTripStart} ) => (\n\n   <PageWrapper className=\"App\">\n      <Countdown\n          date={ temeculaTripStart }\n          renderer={ CountdownClock } />\n    </PageWrapper>\n)\n\nfunction App() {\n  const temeculaTripStart = new Date('2021-08-13T16:00:00');\n\n  return (\n    <Router>\n      <MyCountdown temeculaTripStart={temeculaTripStart} path=\"/\" />\n      <Playlist path=\"playlist\" />\n    </Router>\n\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}